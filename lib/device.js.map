{"version":3,"sources":["device.ts"],"names":[],"mappings":"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","file":"device.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USBDirection } from \"./enums\";\nimport { USBConfiguration, USBControlTransferParameters, USBInTransferResult, USBOutTransferResult, USBIsochronousInTransferResult, USBIsochronousOutTransferResult } from \"./interfaces\";\nimport { adapter } from \"./adapter\";\n\n/**\n * USB Device class\n */\nexport class USBDevice {\n\n    public readonly usbVersionMajor: number;\n    public readonly usbVersionMinor: number;\n    public readonly usbVersionSubminor: number;\n    public readonly deviceClass: number;\n    public readonly deviceSubclass: number;\n    public readonly deviceProtocol: number;\n    public readonly vendorId: number;\n    public readonly productId: number;\n    public readonly deviceVersionMajor: number;\n    public readonly deviceVersionMinor: number;\n    public readonly deviceVersionSubminor: number;\n\n    public readonly manufacturerName: string = null;\n    public readonly productName: string = null;\n    public readonly serialNumber: string = null;\n\n    public get configuration(): USBConfiguration {\n        return adapter.getConfiguration(this._handle);\n    }\n\n    public get configurations(): Array<USBConfiguration> {\n        return adapter.getConfigurations(this._handle);\n    }\n\n    public get opened(): boolean {\n        return adapter.getOpened(this._handle);\n    }\n\n    public readonly url: string = null;\n\n    /**\n     * @hidden\n     */\n    public readonly _handle: any = null;\n\n    /**\n     * USB Device constructor\n     * @param init A partial class to initialise values\n     */\n    constructor(init?: Partial<USBDevice>) {\n        this.usbVersionMajor = init.usbVersionMajor;\n        this.usbVersionMinor = init.usbVersionMinor;\n        this.usbVersionSubminor = init.usbVersionSubminor;\n        this.deviceClass = init.deviceClass;\n        this.deviceSubclass = init.deviceSubclass;\n        this.deviceProtocol = init.deviceProtocol;\n        this.vendorId = init.vendorId;\n        this.productId = init.productId;\n        this.deviceVersionMajor = init.deviceVersionMajor;\n        this.deviceVersionMinor = init.deviceVersionMinor;\n        this.deviceVersionSubminor = init.deviceVersionSubminor;\n\n        this.manufacturerName = init.manufacturerName;\n        this.productName = init.productName;\n        this.serialNumber = init.serialNumber;\n\n        this.url = init.url;\n        this._handle = init._handle;\n    }\n\n    public open(): Promise<void> {\n        return adapter.open(this._handle);\n    }\n\n    public close(): Promise<void> {\n        return adapter.close(this._handle);\n    }\n\n    public selectConfiguration(configurationValue: number): Promise<void> {\n        return adapter.selectConfiguration(this._handle, configurationValue);\n    }\n\n    public claimInterface(interfaceNumber: number): Promise<void> {\n        return adapter.claimInterface(this._handle, interfaceNumber);\n    }\n\n    public releaseInterface(interfaceNumber: number): Promise<void> {\n        return adapter.releaseInterface(this._handle, interfaceNumber);\n    }\n\n    public selectAlternateInterface(interfaceNumber: number, alternateSetting: number): Promise<void> {\n        return adapter.selectAlternateInterface(this._handle, interfaceNumber, alternateSetting);\n    }\n\n    public controlTransferIn(setup: USBControlTransferParameters, length: number): Promise<USBInTransferResult> {\n        return adapter.controlTransferIn(this._handle, setup, length);\n    }\n\n    public controlTransferOut(setup: USBControlTransferParameters, data?: BufferSource): Promise<USBOutTransferResult> {\n        return adapter.controlTransferOut(this._handle, setup, data);\n    }\n\n    public transferIn(endpointNumber: number, length: number): Promise<USBInTransferResult> {\n        return adapter.transferIn(this._handle, endpointNumber, length);\n    }\n\n    public transferOut(endpointNumber: number, data: BufferSource): Promise<USBOutTransferResult> {\n        return adapter.transferOut(this._handle, endpointNumber, data);\n    }\n\n    public reset(): Promise<void> {\n        return adapter.reset(this._handle);\n    }\n\n    /**\n     * @hidden\n     */\n    public clearHalt(_direction: USBDirection, _endpointNumber: number): Promise<void> {\n        return new Promise((_resolve, reject) => {\n            reject(\"error: method not implemented\");\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public isochronousTransferIn(_endpointNumber: number, _packetLengths: Array<number>): Promise<USBIsochronousInTransferResult> {\n        return new Promise((_resolve, reject) => {\n            reject(\"isochronousTransferIn error: method not implemented\");\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public isochronousTransferOut(_endpointNumber: number, _data: BufferSource, _packetLengths: Array<number>): Promise<USBIsochronousOutTransferResult> {\n        return new Promise((_resolve, reject) => {\n            reject(\"isochronousTransferOut error: method not implemented\");\n        });\n    }\n}\n"],"sourceRoot":"../src"}