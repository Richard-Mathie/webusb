{"version":3,"sources":["usb.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;EAuBE;;AAEF,qCAAqC;AAErC,uCAAoC;AAEpC;IACI,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;QACpC,iBAAO,CAAC,WAAW,EAAE;aACpB,IAAI,CAAC,YAAY,CAAC,EAAE;YACjB,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,kBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAPD,gCAOC;AAED,uBAA8B,QAAiC;IAC3D,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;QACpC,iBAAO,CAAC,WAAW,EAAE;aACpB,IAAI,CAAC,YAAY,CAAC,EAAE;YACjB,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACtC,MAAM,CAAC,IAAI,kBAAS,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAXD,sCAWC","file":"usb.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USBDevice } from \"./device\";\nimport { USBDeviceRequestOptions } from \"./interfaces\";\nimport { adapter } from \"./adapter\";\n\nexport function getDevices(): Promise<Array<USBDevice>> {\n    return new Promise((resolve, _reject) => {\n        adapter.findDevices()\n        .then(foundDevices => {\n            resolve(foundDevices.map(device => new USBDevice(device)));\n        });\n    });\n}\n\nexport function requestDevice(_options: USBDeviceRequestOptions): Promise<USBDevice> {\n    return new Promise((resolve, _reject) => {\n        adapter.findDevices()\n        .then(foundDevices => {\n            const devices = foundDevices.map(device => {\n                return new USBDevice(device);\n            });\n\n            resolve(devices[0]);\n        });\n    });\n}\n"],"sourceRoot":"../src"}