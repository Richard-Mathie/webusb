{"version":3,"sources":["adapter.ts"],"names":[],"mappings":"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","file":"adapter.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { getDeviceList, Device } from \"usb\";\nimport { USBDevice } from \"./device\";\nconst usb = {\n    LIBUSB_ENDPOINT_IN: 0x80,\n    LIBUSB_REQUEST_GET_DESCRIPTOR: 0x06,\n    LIBUSB_DT_BOS: 0x0f,\n    LIBUSB_DT_BOS_SIZE: 5\n};\n\n/**\n * @hidden\n */\nexport interface Adapter {\n    findDevices: () => Promise<Array<Partial<USBDevice>>>;\n}\n\n/**\n * @hidden\n */\nexport class USBAdapter implements Adapter {\n\n    private getBosDescriptor(device, callback) {\n\n        if (device.deviceDescriptor.bcdUSB < 0x201) {\n            // BOS is only supported from USB 2.0.1\n            return callback(undefined, null);\n        }\n\n        device.controlTransfer(\n            usb.LIBUSB_ENDPOINT_IN,\n            usb.LIBUSB_REQUEST_GET_DESCRIPTOR,\n            (usb.LIBUSB_DT_BOS << 8),\n            0,\n            usb.LIBUSB_DT_BOS_SIZE,\n            (error1, buffer1) => {\n                if (error1) return callback(undefined, null);\n\n                const totalLength = buffer1.readUInt16LE(2);\n                device.controlTransfer(\n                    usb.LIBUSB_ENDPOINT_IN,\n                    usb.LIBUSB_REQUEST_GET_DESCRIPTOR,\n                    (usb.LIBUSB_DT_BOS << 8),\n                    0,\n                    totalLength,\n                    (error, buffer) => {\n                        if (error) return callback(undefined, null);\n\n                        const descriptor = {\n                            bLength: buffer.readUInt8(0),\n                            bDescriptorType: buffer.readUInt8(1),\n                            wTotalLength: buffer.readUInt16LE(2),\n                            bNumDeviceCaps: buffer.readUInt8(4),\n                            capabilities: []\n                        };\n\n                        let i = usb.LIBUSB_DT_BOS_SIZE;\n                        while (i < descriptor.wTotalLength) {\n                            const capability: any = {\n                                bLength: buffer.readUInt8(i + 0),\n                                bDescriptorType: buffer.readUInt8(i + 1),\n                                bDevCapabilityType: buffer.readUInt8(i + 2)\n                            };\n\n                            capability.dev_capability_data = buffer.slice(i + 3, i + capability.bLength);\n                            descriptor.capabilities.push(capability);\n                            i += capability.bLength;\n                        }\n\n                        // Cache descriptor\n                        callback(undefined, descriptor);\n                    }\n                );\n            }\n        );\n    }\n\n    private getDeviceCapabilities(device, callback) {\n        const capabilities = [];\n\n        this.getBosDescriptor(device, (error, descriptor) => {\n            if (error) return callback(error, null);\n\n            const len = descriptor ? descriptor.capabilities.length : 0;\n            for (let i = 0; i < len; i++) {\n                capabilities.push({\n                    device: device,\n                    id: i,\n                    descriptor: descriptor.capabilities[i],\n                    type: descriptor.capabilities[i].bDevCapabilityType,\n                    data: descriptor.capabilities[i].dev_capability_data\n                });\n            }\n\n            callback(undefined, capabilities);\n        });\n    }\n\n    private getCapabilities(device) {\n        return new Promise((resolve, reject) => {\n            try {\n                device.open();\n            } catch (_e) {\n                resolve([]);\n            }\n            // device.getCapabilities((error, capabilities) => {\n            this.getDeviceCapabilities(device, (error, capabilities) => {\n                device.close();\n                if (error) return reject(error);\n                resolve(capabilities);\n            });\n        });\n    }\n\n    private getWebCapability(capabilities) {\n        const platformCapabilities = capabilities.filter(capability => {\n            return capability.type === 5;\n        });\n\n        const webCapability = platformCapabilities.find(capability => {\n            const version = capability.data.readUInt16LE(17);\n            return version === 256;\n\n            // var uuid = unparse(data, 1);//.readUInt16LE(1);\n            // console.log(uuid); // {3408b638-09a9-47a0-8bfd-a0768815b665}\n        });\n\n        if (webCapability) {\n            return {\n                vendor: webCapability.data.readUInt8(19),\n                page: webCapability.data.readUInt8(20)\n            };\n        }\n\n        return null;\n    }\n\n    private getWebUrl(device, capability): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const REQUEST_TYPE = 0xC0;\n            const GET_URL = 2;\n\n            device.open();\n            device.controlTransfer(REQUEST_TYPE, capability.vendor, capability.page, GET_URL, 64, (error, buffer) => {\n                device.close();\n                if (error) return reject(error);\n\n                // const length = buffer.readUInt8(0);\n                // const type = buffer.readUInt8(1);\n                let url = buffer.toString(\"utf8\", 3);\n\n                const scheme = buffer.readUInt8(2); // 0 - http, 1 - https, 255 - in url\n                if (scheme === 0) url = \"http://\" + url;\n                if (scheme === 1) url = \"https://\" + url;\n\n                resolve(url);\n            });\n        });\n    }\n\n    private getStringDescriptor(device: Device, index: number): Promise<string> {\n        return new Promise((resolve, reject) => {\n            device.open();\n            device.getStringDescriptor(index, (error, buffer) => {\n                device.close();\n                if (error) return reject(error);\n                resolve(buffer.toString());\n            });\n        });\n    }\n\n    private decodeVersion(version: number): { [key: string]: number } {\n        const hex = `0000${version.toString(16)}`.slice(-4);\n        return {\n            major: parseInt(hex.substr(0, 2), null),\n            minor: parseInt(hex.substr(2, 1), null),\n            sub: parseInt(hex.substr(3, 1), null),\n        };\n    }\n\n    public findDevices(): Promise<Array<Partial<USBDevice>>> {\n        return new Promise((resolve, _reject) => {\n            const promises = getDeviceList().map(device => {\n                return this.getCapabilities(device)\n                .then(capabilities => this.getWebCapability(capabilities))\n                .then(capability => {\n                    if (!capability) return null;\n\n                    return this.getWebUrl(device, capability)\n                    .then(url => {\n                        const props: Partial<USBDevice> = {\n                            url: url\n                        };\n\n                        if (!device.deviceDescriptor) return props;\n\n                        const descriptor = device.deviceDescriptor;\n                        props.deviceClass = descriptor.bDeviceClass;\n                        props.deviceSubclass = descriptor.bDeviceSubClass;\n                        props.deviceProtocol = descriptor.bDeviceProtocol;\n\n                        props.productId = descriptor.idProduct;\n                        props.vendorId = descriptor.idVendor;\n\n                        const deviceVersion = this.decodeVersion(descriptor.bcdDevice);\n                        props.deviceVersionMajor = deviceVersion.major;\n                        props.deviceVersionMinor = deviceVersion.minor;\n                        props.deviceVersionSubminor = deviceVersion.sub;\n\n                        const usbVersion = this.decodeVersion(descriptor.bcdUSB);\n                        props.usbVersionMajor = usbVersion.major;\n                        props.usbVersionMinor = usbVersion.minor;\n                        props.usbVersionSubminor = usbVersion.sub;\n\n                        return this.getStringDescriptor(device, descriptor.iManufacturer)\n                        .then(manufacturerName => {\n                            props.manufacturerName = manufacturerName;\n                            return this.getStringDescriptor(device, descriptor.iProduct);\n                        })\n                        .then(productName => {\n                            props.productName = productName;\n                            return this.getStringDescriptor(device, descriptor.iSerialNumber);\n                        })\n                        .then(serialNumber => {\n                            props.serialNumber = serialNumber;\n                            return props;\n                        });\n                    });\n                });\n            });\n\n            return Promise.all(promises)\n            .then(devices => {\n                const filtered = devices.filter(device => device);\n                resolve(filtered);\n            });\n        });\n    }\n}\n\n/**\n * @hidden\n */\nexport const adapter = new USBAdapter();\n"],"sourceRoot":"../src"}